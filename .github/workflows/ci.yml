name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - elixir: '1.16.0'
            otp: '26.0'
          - elixir: '1.17.0'
            otp: '27.0'
    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{matrix.elixir}}
          otp-version: ${{matrix.otp}}

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Check formatting
        run: mix format --check-formatted

      - name: Run credo
        run: mix credo --strict

      - name: Check unused dependencies
        run: mix deps.unlock --check-unused

      - name: Compile without warnings
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test

      - name: Run test coverage
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dialyzer:
    name: Dialyzer
    runs-on: ubuntu-latest
    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.17.0'
          otp-version: '27.0'

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-dialyzer-mix-${{ hashFiles('**/mix.lock') }}

      - name: Restore PLT cache
        uses: actions/cache@v3
        with:
          path: priv/plts
          key: ${{ runner.os }}-dialyzer-plt-${{ hashFiles('**/mix.lock') }}

      - name: Install dependencies
        run: mix deps.get

      - name: Create PLTs
        run: mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --format github